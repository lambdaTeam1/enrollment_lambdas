AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: A streamlined AWS Lambda Java application for user management

Globals:
  Function:
    Runtime: java17
    CodeUri: .
    Timeout: 120 

Resources:
  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:GetFunction
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:AddPermission
                Resource: "*"
        - PolicyName: IAMPermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                Resource: "*"
        - PolicyName: APIGatewayPermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:*
                Resource: "*"
        - PolicyName: CloudFormationPermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"
        - PolicyName: RDSPermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds-data:*
                  - rds:DescribeDBClusters
                Resource: "*"
        - PolicyName: S3PermissionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"

  UsersLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.users.UsersLambdaHandler::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        UserApi:
          Type: Api
          Properties:
            Path: /users
            Method: post

  HelpDeskTicketLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.helpdesk.HelpDeskTicketLambdaHandler::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        HelpDeskTicketApi:
          Type: Api
          Properties:
            Path: /tickets
            Method: post

  LoginLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.login.LoginLambdaHandler::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /login
            Method: post

  HCTAEnrollmentValidatorLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.giinverification.HCTAEnrollmentValidatorLambdaHandler::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /validate
            Method: get

  GIINVerificationLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.giinverification.GIINVerificationLambdaHandler::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /getGiin/{giin}
            Method: GET

  AuroraConnectionVerifierLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.ides.giinverification.AuroraConnectionVerifier::handleRequest 
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /test
            Method: get


